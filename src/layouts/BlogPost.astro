---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { getLangFromUrl, useTranslations } from "../i18n/utils";
import { findLanguage } from "../data/findLanguage";
import { imageURLCorrection } from "../data/imageURLCorrection";
import { Picture } from "astro:assets";
import { getImagesMetadata } from "../data/imageManager";

import { Image } from "astro:assets";
import localPrintImage from "../content/Icons/print-svgrepo-com.svg";
import localMarkdownImage from "../content/Icons/markdown-svgrepo-com.svg";
import localPDFImage from "../content/Icons/pdf-svgrepo-com.svg";

const { title, slug, excerpt, authors, pubDate, heroImage } = Astro.props;

const pdfUrl = `${pubDate.toISOString().split("T")[0]}-${slug}`;

//console.log(slug);

let pathStr = String(Astro.url.pathname);

if (pathStr.charAt(0) === "/") pathStr = pathStr.substring(1, pathStr.length);

if (pathStr.charAt(pathStr.length - 1) === "/")
  pathStr = pathStr.substring(0, pathStr.length - 1);

const autrices: Array<string> = authors;

const imagePath: string = imageURLCorrection(heroImage);

let resultat = await getImagesMetadata();

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<html lang={lang}>
  <head>
    <BaseHead title={title} description={excerpt} />
    <style>
      .hero-image {
        width: 100%;
      }
      .hero-image img {
        display: block;
        position: relative;
        top: 0;
        left: 0;
        right: 0;
        opacity: 1;
        margin: 0 auto;
        margin-left: auto;
        margin-right: auto;
        border-radius: 0;
        box-shadow: var(--box-shadow);
        z-index: 1;
      }

      .prose {
        width: 720px;
        max-width: calc(100% - 2em);
        margin: auto;
        color: rgb(var(--gray-dark));
        z-index: 1;
        position: relative;
        padding-top: 40px;
      }

      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
      }
      .date {
        margin-bottom: 0.5em;
        color: black;
      }
      .last-updated-on {
        font-style: italic;
      }

      .sufficent-margin {
        margin-bottom: -18rem;
      }

      @media (min-width: 768px) {
        .prose {
          padding: 1em;
        }

        .hero-image img {
          display: block;
          margin: 0 auto;
          position: relative;
          border-radius: 12px;
          box-shadow: var(--box-shadow);
          height: 50vh;
        }
        main {
          margin: auto;
          padding-top: 0;
        }
      }
    </style>
  </head>

  <body>
    <Header numeroPage={`0`} />
    <main
      class="w-full pt-0 ps-0 pe-0 max-w-fit md:max-w-[calc(100%-2rem)] md:w-[calc(100%-2rem)] md:pt-32"
    >
      <article>
        <div class="hero-image md:pt-24">
          <Picture
            src={resultat[imagePath]}
            width={1020}
            height={510}
            alt=""
            loading={"eager"}
            class="object-cover bg-fixed opacityFade"
          />
        </div>
        <div class="prose">
          <div class="title">
            <div class="date">
              <FormattedDate
                date={pubDate}
                locale={findLanguage(new URL(Astro.url))}
              />
            </div>
            <h1 class="text-5xl">{title}</h1>
            <p>{t("by")}</p>
            {
              autrices.map((autrice: string) => (
                <h5 class="m-0 mb-3">{autrice}</h5>
              ))
            }
            <div class="utilitaires-texte flex justify-around align-bottom m-8">
              <a href=""
                ><Image
                  width="45"
                  src={localPDFImage}
                  alt="Download a pdf version"
                /></a
              >

              <a href=""
                ><Image
                  height="50"
                  src={localMarkdownImage}
                  alt="Download a pdf version"
                /></a
              >
              <a href="javascript:if(window.print)window.print()"
                ><Image
                  width="50"
                  src={localPrintImage}
                  alt="Download a pdf version"
                /></a
              >
            </div>
            <hr />
          </div>
          <slot />
        </div>
      </article>
    </main>
    <Footer numeroPage={`0`} />
  </body>
</html>

<script>
  const header = document.querySelector(".opacityFade") as HTMLElement;
  const prose = document.querySelector(".prose") as HTMLElement;
  const article = document.querySelector("article") as HTMLElement;

  let result = "";
  let scrollTop = 0;
  window.addEventListener("scroll", function () {
    scrollTop = window.scrollY || document.documentElement.scrollTop;
    result = String(1 - scrollTop / 250);
    if (header !== null) {
      let res = parseInt(result);
      if (res >= 0) {
        header.style.opacity = result;
        prose.style.translate = `0 ${1 - scrollTop}px`;
        if (res === 1) {
          if (!article.classList.contains("sufficent-margin"))
            article.classList.add("sufficent-margin");
        }
      }
    }

    window.onbeforeprint = function () {
      header.style.opacity = "1";
      prose.style.translate = `0px`;
    };

    window.onafterprint = function () {
      header.style.opacity = result;
      prose.style.translate = `0 ${1 - scrollTop}px`;
    };
  });
</script>
